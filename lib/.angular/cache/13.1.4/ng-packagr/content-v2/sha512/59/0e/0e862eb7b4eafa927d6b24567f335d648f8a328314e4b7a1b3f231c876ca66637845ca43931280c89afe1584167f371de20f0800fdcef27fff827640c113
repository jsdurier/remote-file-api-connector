{"hash":"79df88d0e15e858ad3d82adbcb6cf80bf3696c92","fesm2020":{"code":"import * as i1 from '@angular/common/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport * as i0 from '@angular/core';\nimport { Injectable, NgModule } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\n\nconst CONFIG = {\n    port: 5000\n};\n\nconst ROUTE = 'write-file';\nconst SERVER_NAME = 'remoteFileApi';\nconst SERVER_NOT_RUNNING_ERROR = `Server ${SERVER_NAME} not running on port ${CONFIG.port}`;\nconst LOCALHOST = 'localhost';\nconst HTTP = 'http';\nconst URL = `${HTTP}://${LOCALHOST}:${CONFIG.port}/${ROUTE}`;\nclass RemoteFileApiConnectorService {\n    constructor(_http) {\n        this._http = _http;\n    }\n    async writeFile(filePath, content) {\n        const body = {\n            filePath,\n            content\n        };\n        try {\n            await firstValueFrom(this._http.post(URL, body));\n        }\n        catch (err) {\n            handleError(err);\n        }\n    }\n}\nRemoteFileApiConnectorService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.3\", ngImport: i0, type: RemoteFileApiConnectorService, deps: [{ token: i1.HttpClient }], target: i0.ɵɵFactoryTarget.Injectable });\nRemoteFileApiConnectorService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.3\", ngImport: i0, type: RemoteFileApiConnectorService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.3\", ngImport: i0, type: RemoteFileApiConnectorService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }]; } });\nfunction handleError(error) {\n    if (error.status === 0) {\n        console.error(SERVER_NOT_RUNNING_ERROR);\n        return;\n    }\n    console.error(error.error);\n}\n\nclass RemoteFileApiConnectorModule {\n}\nRemoteFileApiConnectorModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.3\", ngImport: i0, type: RemoteFileApiConnectorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nRemoteFileApiConnectorModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.3\", ngImport: i0, type: RemoteFileApiConnectorModule, imports: [HttpClientModule] });\nRemoteFileApiConnectorModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.3\", ngImport: i0, type: RemoteFileApiConnectorModule, providers: [\n        RemoteFileApiConnectorService\n    ], imports: [[\n            HttpClientModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.3\", ngImport: i0, type: RemoteFileApiConnectorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [],\n                    exports: [],\n                    imports: [\n                        HttpClientModule\n                    ],\n                    providers: [\n                        RemoteFileApiConnectorService\n                    ]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { RemoteFileApiConnectorModule, RemoteFileApiConnectorService };\n//# sourceMappingURL=jsdurier-remote-file-api-connector.mjs.map\n","map":{"version":3,"file":"jsdurier-remote-file-api-connector.mjs","sources":["../../lib/src/config.ts","../../lib/src/remote-file-api-connector.service.ts","../../lib/src/remote-file-api-connector.module.ts","../../lib/src/jsdurier-remote-file-api-connector.ts"],"sourcesContent":["export const CONFIG = {\n\tport: 5000\n};\n","import { Injectable } from '@angular/core';\nimport {\n\tHttpClient,\n\tHttpErrorResponse\n} from '@angular/common/http';\nimport { firstValueFrom } from 'rxjs';\n\nimport { CONFIG } from './config';\n\nconst ROUTE = 'write-file';\nconst SERVER_NAME = 'remoteFileApi';\nconst SERVER_NOT_RUNNING_ERROR = `Server ${SERVER_NAME} not running on port ${CONFIG.port}`;\nconst LOCALHOST = 'localhost';\nconst HTTP = 'http';\nconst URL = `${HTTP}://${LOCALHOST}:${CONFIG.port}/${ROUTE}`;\n\n@Injectable()\nexport class RemoteFileApiConnectorService {\n\n\tconstructor(private readonly _http: HttpClient) { }\n\n\tasync writeFile(\n\t\tfilePath: string,\n\t\tcontent: string\n\t): Promise<void> {\n\t\tconst body = {\n\t\t\tfilePath,\n\t\t\tcontent\n\t\t};\n\t\ttry {\n\t\t\tawait firstValueFrom(this._http.post(\n\t\t\t\tURL,\n\t\t\t\tbody\n\t\t\t));\n\t\t} catch (err) {\n\t\t\thandleError(err as HttpErrorResponse);\n\t\t}\n\t}\n}\n\nfunction handleError(error: HttpErrorResponse): void {\n\tif (error.status === 0) {\n\t\tconsole.error(SERVER_NOT_RUNNING_ERROR);\n\t\treturn;\n\t}\n\tconsole.error(error.error);\n}\n","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\n\nimport { RemoteFileApiConnectorService } from './remote-file-api-connector.service';\n\n@NgModule({\n\tdeclarations: [\n\t],\n\texports: [\n\t],\n\timports: [\n\t\tHttpClientModule\n\t],\n\tproviders: [\n\t\tRemoteFileApiConnectorService\n\t]\n})\nexport class RemoteFileApiConnectorModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;AAAO,MAAM,MAAM,GAAG;IACrB,IAAI,EAAE,IAAI;CACV;;ACOD,MAAM,KAAK,GAAG,YAAY,CAAC;AAC3B,MAAM,WAAW,GAAG,eAAe,CAAC;AACpC,MAAM,wBAAwB,GAAG,UAAU,WAAW,wBAAwB,MAAM,CAAC,IAAI,EAAE,CAAC;AAC5F,MAAM,SAAS,GAAG,WAAW,CAAC;AAC9B,MAAM,IAAI,GAAG,MAAM,CAAC;AACpB,MAAM,GAAG,GAAG,GAAG,IAAI,MAAM,SAAS,IAAI,MAAM,CAAC,IAAI,IAAI,KAAK,EAAE,CAAC;MAGhD,6BAA6B;IAEzC,YAA6B,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;KAAK;IAEnD,MAAM,SAAS,CACd,QAAgB,EAChB,OAAe;QAEf,MAAM,IAAI,GAAG;YACZ,QAAQ;YACR,OAAO;SACP,CAAC;QACF,IAAI;YACH,MAAM,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CACnC,GAAG,EACH,IAAI,CACJ,CAAC,CAAC;SACH;QAAC,OAAO,GAAG,EAAE;YACb,WAAW,CAAC,GAAwB,CAAC,CAAC;SACtC;KACD;;0HApBW,6BAA6B;8HAA7B,6BAA6B;2FAA7B,6BAA6B;kBADzC,UAAU;;AAwBX,SAAS,WAAW,CAAC,KAAwB;IAC5C,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;QACvB,OAAO,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC;QACxC,OAAO;KACP;IACD,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAC5B;;MC7Ba,4BAA4B;;yHAA5B,4BAA4B;0HAA5B,4BAA4B,YANvC,gBAAgB;0HAML,4BAA4B,aAJ7B;QACV,6BAA6B;KAC7B,YALQ;YACR,gBAAgB;SAChB;2FAKW,4BAA4B;kBAZxC,QAAQ;mBAAC;oBACT,YAAY,EAAE,EACb;oBACD,OAAO,EAAE,EACR;oBACD,OAAO,EAAE;wBACR,gBAAgB;qBAChB;oBACD,SAAS,EAAE;wBACV,6BAA6B;qBAC7B;iBACD;;;AChBD;;;;;;"}},"fesm2015":{"code":"import * as i1 from '@angular/common/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport * as i0 from '@angular/core';\nimport { Injectable, NgModule } from '@angular/core';\nimport { __awaiter } from 'tslib';\nimport { firstValueFrom } from 'rxjs';\n\nconst CONFIG = {\n    port: 5000\n};\n\nconst ROUTE = 'write-file';\nconst SERVER_NAME = 'remoteFileApi';\nconst SERVER_NOT_RUNNING_ERROR = `Server ${SERVER_NAME} not running on port ${CONFIG.port}`;\nconst LOCALHOST = 'localhost';\nconst HTTP = 'http';\nconst URL = `${HTTP}://${LOCALHOST}:${CONFIG.port}/${ROUTE}`;\nclass RemoteFileApiConnectorService {\n    constructor(_http) {\n        this._http = _http;\n    }\n    writeFile(filePath, content) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const body = {\n                filePath,\n                content\n            };\n            try {\n                yield firstValueFrom(this._http.post(URL, body));\n            }\n            catch (err) {\n                handleError(err);\n            }\n        });\n    }\n}\nRemoteFileApiConnectorService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.3\", ngImport: i0, type: RemoteFileApiConnectorService, deps: [{ token: i1.HttpClient }], target: i0.ɵɵFactoryTarget.Injectable });\nRemoteFileApiConnectorService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.3\", ngImport: i0, type: RemoteFileApiConnectorService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.3\", ngImport: i0, type: RemoteFileApiConnectorService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }]; } });\nfunction handleError(error) {\n    if (error.status === 0) {\n        console.error(SERVER_NOT_RUNNING_ERROR);\n        return;\n    }\n    console.error(error.error);\n}\n\nclass RemoteFileApiConnectorModule {\n}\nRemoteFileApiConnectorModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.3\", ngImport: i0, type: RemoteFileApiConnectorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nRemoteFileApiConnectorModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.3\", ngImport: i0, type: RemoteFileApiConnectorModule, imports: [HttpClientModule] });\nRemoteFileApiConnectorModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.3\", ngImport: i0, type: RemoteFileApiConnectorModule, providers: [\n        RemoteFileApiConnectorService\n    ], imports: [[\n            HttpClientModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.3\", ngImport: i0, type: RemoteFileApiConnectorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [],\n                    exports: [],\n                    imports: [\n                        HttpClientModule\n                    ],\n                    providers: [\n                        RemoteFileApiConnectorService\n                    ]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { RemoteFileApiConnectorModule, RemoteFileApiConnectorService };\n//# sourceMappingURL=jsdurier-remote-file-api-connector.mjs.map\n","map":{"version":3,"file":"jsdurier-remote-file-api-connector.mjs","sources":["../../lib/src/config.ts","../../lib/src/remote-file-api-connector.service.ts","../../lib/src/remote-file-api-connector.module.ts","../../lib/src/jsdurier-remote-file-api-connector.ts"],"sourcesContent":["export const CONFIG = {\n\tport: 5000\n};\n","import { Injectable } from '@angular/core';\nimport {\n\tHttpClient,\n\tHttpErrorResponse\n} from '@angular/common/http';\nimport { firstValueFrom } from 'rxjs';\n\nimport { CONFIG } from './config';\n\nconst ROUTE = 'write-file';\nconst SERVER_NAME = 'remoteFileApi';\nconst SERVER_NOT_RUNNING_ERROR = `Server ${SERVER_NAME} not running on port ${CONFIG.port}`;\nconst LOCALHOST = 'localhost';\nconst HTTP = 'http';\nconst URL = `${HTTP}://${LOCALHOST}:${CONFIG.port}/${ROUTE}`;\n\n@Injectable()\nexport class RemoteFileApiConnectorService {\n\n\tconstructor(private readonly _http: HttpClient) { }\n\n\tasync writeFile(\n\t\tfilePath: string,\n\t\tcontent: string\n\t): Promise<void> {\n\t\tconst body = {\n\t\t\tfilePath,\n\t\t\tcontent\n\t\t};\n\t\ttry {\n\t\t\tawait firstValueFrom(this._http.post(\n\t\t\t\tURL,\n\t\t\t\tbody\n\t\t\t));\n\t\t} catch (err) {\n\t\t\thandleError(err as HttpErrorResponse);\n\t\t}\n\t}\n}\n\nfunction handleError(error: HttpErrorResponse): void {\n\tif (error.status === 0) {\n\t\tconsole.error(SERVER_NOT_RUNNING_ERROR);\n\t\treturn;\n\t}\n\tconsole.error(error.error);\n}\n","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\n\nimport { RemoteFileApiConnectorService } from './remote-file-api-connector.service';\n\n@NgModule({\n\tdeclarations: [\n\t],\n\texports: [\n\t],\n\timports: [\n\t\tHttpClientModule\n\t],\n\tproviders: [\n\t\tRemoteFileApiConnectorService\n\t]\n})\nexport class RemoteFileApiConnectorModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;;AAAO,MAAM,MAAM,GAAG;IACrB,IAAI,EAAE,IAAI;CACV;;ACOD,MAAM,KAAK,GAAG,YAAY,CAAC;AAC3B,MAAM,WAAW,GAAG,eAAe,CAAC;AACpC,MAAM,wBAAwB,GAAG,UAAU,WAAW,wBAAwB,MAAM,CAAC,IAAI,EAAE,CAAC;AAC5F,MAAM,SAAS,GAAG,WAAW,CAAC;AAC9B,MAAM,IAAI,GAAG,MAAM,CAAC;AACpB,MAAM,GAAG,GAAG,GAAG,IAAI,MAAM,SAAS,IAAI,MAAM,CAAC,IAAI,IAAI,KAAK,EAAE,CAAC;MAGhD,6BAA6B;IAEzC,YAA6B,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;KAAK;IAE7C,SAAS,CACd,QAAgB,EAChB,OAAe;;YAEf,MAAM,IAAI,GAAG;gBACZ,QAAQ;gBACR,OAAO;aACP,CAAC;YACF,IAAI;gBACH,MAAM,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CACnC,GAAG,EACH,IAAI,CACJ,CAAC,CAAC;aACH;YAAC,OAAO,GAAG,EAAE;gBACb,WAAW,CAAC,GAAwB,CAAC,CAAC;aACtC;SACD;KAAA;;0HApBW,6BAA6B;8HAA7B,6BAA6B;2FAA7B,6BAA6B;kBADzC,UAAU;;AAwBX,SAAS,WAAW,CAAC,KAAwB;IAC5C,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;QACvB,OAAO,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC;QACxC,OAAO;KACP;IACD,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAC5B;;MC7Ba,4BAA4B;;yHAA5B,4BAA4B;0HAA5B,4BAA4B,YANvC,gBAAgB;0HAML,4BAA4B,aAJ7B;QACV,6BAA6B;KAC7B,YALQ;YACR,gBAAgB;SAChB;2FAKW,4BAA4B;kBAZxC,QAAQ;mBAAC;oBACT,YAAY,EAAE,EACb;oBACD,OAAO,EAAE,EACR;oBACD,OAAO,EAAE;wBACR,gBAAgB;qBAChB;oBACD,SAAS,EAAE;wBACV,6BAA6B;qBAC7B;iBACD;;;AChBD;;;;;;"}}}